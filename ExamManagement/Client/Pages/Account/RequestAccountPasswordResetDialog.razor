@using System.ComponentModel.DataAnnotations
@inject AccountGrpcService.AccountGrpcServiceClient _grpcClient;

<MudDialog>
	<DialogContent>
		<MudCardContent>
			<EditForm Model="@acc" OnValidSubmit="TrySendResetEmail">
				<DataAnnotationsValidator />
				<MudTextField @bind-Value="acc.EmailAddress" Label="Email Address" For="@(()=>acc.EmailAddress)" InputMode="InputMode.email" InputType="InputType.Email" Class="mt-3" RequiredError="Email address is required."></MudTextField>
				<MudSpacer />
				<br />
				<MudCardActions>
					<MudSpacer />
					<MudButton OnClick="@Close" Variant="Variant.Filled" Color="Color.Dark" Class="ml-auto" Style="margin-right:4px;">Cancel</MudButton>
					<MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Reset Account</MudButton>
				</MudCardActions>
			</EditForm>
		</MudCardContent>
	</DialogContent>
</MudDialog>

@code {

	[CascadingParameter] MudDialogInstance MudDialog { get; set; }

	void Close() => MudDialog.Close(DialogResult.Ok(true));

	ResetAcc acc = new ResetAcc();

	public class ResetAcc
	{
		[Required(ErrorMessage="Email address is required"), DataType(DataType.EmailAddress)]
		public string EmailAddress { get; set; }
	}

	async Task TrySendResetEmail(EditContext context)
	{
		await _grpcClient.SendResetPasswordEmailAsync(new CheckEmailAddressMessage
			{
				Email = acc.EmailAddress
			});
		MudDialog.Close(DialogResult.Ok(true));
		Snackbar.Add("We will sent you a link to reset your password if you are registered with us.", Severity.Info);
	}

}
